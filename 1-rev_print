Assignment name  : rev_print
Expected files   : rev_print.c
Allowed functions: write
--------------------------------------------------------------------------------

Write a function that takes a string and displays the string in reverse
order followed by the newline.
Its prototype is constructed like this : 
  char *ft_rev_print (char *str)
It must return its argument

Examples:

$> ./rev_print "zaz" | cat -e
zaz$
$> ./rev_print "dub0 a POIL" | cat -e
LIOP a 0bud$
$> ./rev_print | cat -e
$

Here's an example implementation of the `ft_rev_print` function in C:

```c
#include <unistd.h>

char *ft_rev_print(char *str) {
    int len = 0;
    while (str[len] != '\0') {
        len++;
    }
    
    for (int i = len - 1; i >= 0; i--) {
        write(1, &str[i], 1);
    }
    
    return str;
}
```

In this function, we first calculate the length of the input string `str` by iterating over it until we reach the null terminator `'\0'`. Then, we use a loop to print the characters of the string in reverse order by starting from the last character and moving towards the first character. We use the `write` function from the `unistd.h` header to write each character to the standard output.

Finally, we return the input string `str` as per the function prototype.

You can use this function to reverse print a string by passing the string as an argument to `ft_rev_print`. The reversed string will be printed to the standard output.
