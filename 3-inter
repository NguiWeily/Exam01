Assignment name  : inter
Expected files   : inter.c
Allowed functions: write
--------------------------------------------------------------------------------

Write a program that takes two strings and displays, without doubles, the
characters that appear in both strings, in the order they appear in the first
one.

The display will be followed by a \n.

If the number of arguments is not 2, the program displays \n.

Examples:

$>./inter "padinton" "paqefwtdjetyiytjneytjoeyjnejeyj" | cat -e
padinto$
$>./inter ddf6vewg64f gtwthgdwthdwfteewhrtag6h4ffdhsd | cat -e
df6ewg4$
$>./inter "rien" "cette phrase ne cache rien" | cat -e
rien$
$>./inter | cat -e
$

Here's an example implementation of the `inter` program in C:

```c
#include <unistd.h>

void inter(char *str1, char *str2) {
    int seen[256] = {0}; // Array to track seen characters

    int i = 0;
    while (str1[i]) {
        seen[(int)str1[i]] = 1; // Mark character as seen
        i++;
    }

    i = 0;
    while (str2[i]) {
        if (seen[(int)str2[i]]) {
            write(1, &str2[i], 1); // Write character if seen in str1
            seen[(int)str2[i]] = 0; // Mark character as outputted
        }
        i++;
    }
}

int main(int argc, char **argv) {
    if (argc == 3)
        inter(argv[1], argv[2]);
    write(1, "\n", 1);
    return 0;
}
```

In this implementation, the `inter` function takes two strings as arguments. It uses an array called `seen` to keep track of the characters seen in the first string (`str1`). The array is initialized with zeros.

The function iterates over each character in `str1` and marks it as seen by setting the corresponding element in the `seen` array to 1.

Next, the function iterates over each character in `str2` and checks if it has been seen in `str1`. If a character has been seen, it is written to the standard output using the `write` function, and the corresponding element in the `seen` array is set to 0 to mark it as outputted.

The `main` function checks if there are exactly two arguments provided (the two strings). If so, it calls the `inter` function with the arguments. After that, it writes a newline character to the standard output. If there are not exactly two arguments, it simply writes a newline character.

You can compile and run this program using a C compiler, such as `gcc`.
