Assignment name  : union
Expected files   : union.c
Allowed functions: write
--------------------------------------------------------------------------------

Write a program that takes two strings and displays, without doubles, the
characters that appear in either one of the strings.

The display will be in the order characters appear in the command line, and
will be followed by a \n.

If the number of arguments is not 2, the program displays \n.

Example:

$>./union zpadinton "paqefwtdjetyiytjneytjoeyjnejeyj" | cat -e
zpadintoqefwjy$
$>./union ddf6vewg64f gtwthgdwthdwfteewhrtag6h4ffdhsd | cat -e
df6vewg4thras$
$>./union "rien" "cette phrase ne cache rien" | cat -e
rienct phas$
$>./union | cat -e
$
$>
$>./union "rien" | cat -e
$
$>

Here's an example implementation of the `union` program in C:

```c
#include <unistd.h>

int is_duplicate(char *str, int end, char c) {
    int i = 0;

    while (i < end) {
        if (str[i] == c)
            return 1;
        i++;
    }

    return 0;
}

void union_strings(char *str1, char *str2) {
    int i = 0;

    while (str1[i]) {
        if (!is_duplicate(str1, i, str1[i]))
            write(1, &str1[i], 1);
        i++;
    }

    i = 0;

    while (str2[i]) {
        if (!is_duplicate(str1, i, str2[i]) && !is_duplicate(str2, i, str2[i]))
            write(1, &str2[i], 1);
        i++;
    }

    write(1, "\n", 1);
}

int main(int argc, char **argv) {
    if (argc == 3)
        union_strings(argv[1], argv[2]);
    else
        write(1, "\n", 1);

    return 0;
}
```

In this implementation, the `union_strings` function takes two strings as arguments. It iterates over each character in the first string (`str1`) and checks if the character has already been encountered. If the character is unique, it is written to the standard output using the `write` function.

After processing the first string, the function performs a similar iteration over the second string (`str2`). For each character in `str2`, it checks if the character is already present in either `str1` or `str2` to avoid duplicates. If the character is unique, it is written to the standard output.

The `main` function checks if there are exactly two arguments provided (the two strings). If so, it calls the `union_strings` function with the arguments. If there are no arguments or more than two arguments, it simply writes a newline character to the standard output.

You can compile and run this program using a C compiler, such as `gcc`.
